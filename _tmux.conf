
# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 2
bind -r > resize-pane -R 2
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# copy mode
unbind p
bind p paste-buffer
bind -n PgUp copy-mode -u
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'r' rectangle-toggle
bind -t vi-copy 'y' copy-selection

# quick pane cycling
unbind ^F
bind ^F select-pane -t :.+

# switch panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# select window with meta+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# use regular ctrl+hjkl to switch between tmux and vim panes
# Requires vim to respond to ctrl+hjkl in a certain way:
# https://github.com/aaronjensen/vimfiles/blob/41315d26407de7c3d2bbabd2d412b049642f09b5/vimrc#L466-L497
bind -n ^H run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^H) || tmux select-pane -L"
bind -n ^J run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^J) || tmux select-pane -D"
bind -n ^K run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^K) || tmux select-pane -U"
bind -n ^L run "(tmux display-message -p '#{pane_title}' | grep -iq vim && tmux send-keys ^L) || tmux select-pane -R"

# splits
bind s split-window -v
bind v split-window -h

# resize panes
bind -r ^L resize-pane -R 5
bind -r ^J resize-pane -D 5
bind -r ^K resize-pane -U 5
bind -r ^H resize-pane -L 5

bind -n M-t next-window
bind -n M-r previous-window

# zoom
unbind ^M
bind ^M resize-pane -Z

# Copy/paste to system clipboard
bind C-c run "tmux save-buffer - | xsel -i" \; display-message "tmux buffer -> mouse clipboard" 
bind C-v run "xsel -o | tmux load-buffer - && tmux paste-buffer"

# Map prefix to CTRL-o
unbind C-b
set -g prefix C-o
bind C-o send-prefix

# listen for activity on all windows
set -g bell-action any

# time for repeat keypress without prefix
set -g repeat-time 1000

# on-screen time for display-panes in ms
set -g display-panes-time 3000

# start window indexing at one instead of zero
set -g base-index 1
set -g pane-base-index 1

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string "tmux.#I.#W"

# center align the window list
set -g status-justify centre
# vi-style controls for copy mode
setw -g mode-keys vi
set -g history-limit 5000
set -g default-shell /bin/bash

# Time for display messages
set -g display-time 5000

################################################################################
# Mouse settings
################################################################################
setw -g mode-mouse on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
# Toggle mouse on
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

################################################################################
# Other options
################################################################################
set -g default-terminal "screen-256color"
set -g status-keys vi
# Faster Command Sequences
set -s escape-time 0
# not really sure what this does, but with it, the scrollwheel works inside Vim
set -g mouse-utf8 on
set -g set-clipboard on
set -g history-limit 50000

# copy environment variables
#set -g update-environment -r

# This enables iterm cursor changes from vim. In vim you'll need:
# if exists('$TMUX')
#   let &t_SI = "\<Esc>[3 q"
#   let &t_EI = "\<Esc>[0 q"
# endif
#
# Source: https://github.com/Casecommons/casecommons_workstation/blob/master/templates/default/dot_tmux.conf.erb
#         https://github.com/Casecommons/vim-config/blob/master/init/tmux.vim
set-option -g terminal-overrides '*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p1%s;%p2%s\007:Cc=\E]12;%p1%s\007:Cr=\E]112\007:Cs=\E]50;CursorShape=%?%p1%{3}%<%t%{0}%e%p1%{2}%-%;%d\007'

# Window options
setw -g utf8 on
setw -g xterm-keys on
setw -g automatic-rename on
setw -g monitor-activity on
setw -g aggressive-resize on

set -g visual-bell on

################################################################################
# COLOUR (Solarized 256)
################################################################################
# default window title colors
setw -g window-status-fg colour244 #base0
setw -g window-status-bg default
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg colour166 #orange
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# clock
setw -g clock-mode-colour colour64 #green

# default statusbar colors
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
set -g status-attr default

# pane border
set -g pane-border-fg colour235 #base02
set -g pane-active-border-fg colour240 #base01

# message text
set -g message-bg colour235 #base02
set -g message-fg colour166 #orange

# pane number display
set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange

bind  C-a command-prompt -p "Command to all panes in this window:" \
          "run \"tmux list-panes                     -F '##{pane_index}'          | xargs -I PANE \
                 tmux send-keys     -t PANE          '%1' Enter\""
